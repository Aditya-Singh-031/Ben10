# Enter your encrypted text below in the variable 'Encryption' and run the script
Encryption = 'Your Encrypted Text Here!'

import random
import string
maps = {
    '^VlX lXv': {'a': 'X', 'b': 'd', 'c': 'W', 'd': 'n', 'e': 'U', 'f': 'Y', 'g': '<', 'h': 'R', 'i': 'V', 'j': 't', 'k': 'O', 'l': ' ', 'm': 'N', 'n': 'v', 'o': '&', 'p': 'S', 'q': '}', 'r': ':', 's': '8', 't': '~', 'u': '.', 'v': 'l', 'w': '[', 'x': '\r', 'y': '@', 'z': "'", 'A': '!', 'B': '^', 'C': '2', 'D': '\\', 'E': '>', 'F': '1', 'G': 'H', 'H': '\x0b', 'I': '6', 'J': 'x', 'K': '*', 'L': '-', 'M': 'r', 'N': '%', 'O': 'z', 'P': 'D', 'Q': '0', 'R': 'I', 'S': '7', 'T': 'e', 'U': 's', 'V': 'M', 'W': '/', 'X': 'y', 'Y': '3', 'Z': '_', '0': 'g', '1': '9', '2': '"', '3': 'k', '4': 'F', '5': '$', '6': 'o', '7': '\n', '8': 'b', '9': 'p', '!': '+', '"': 'E', '#': 'A', '$': 'c', '%': 'B', '&': '|', "'": 'C', '(': '4', ')': '\t', '*': 'u', '+': 'T', ',': '`', '-': 'j', '.': 'a', '/': 'J', ':': '{', ';': 'w', '<': '\x0c', '=': 'm', '>': 'h', '?': ')', '@': ']', '[': '=', '\\': 'G', ']': 'Q', '^': '#', '_': '?', '`': ';', '{': '(', '|': 'q', '}': 'L', '~': 'i', ' ': 'P', '\t': 'Z', '\n': 'f', '\r': ',', '\x0b': '5', '\x0c': 'K'},
    'nu%uquB76':{'a': 'u', 'b': '>', 'c': 'X', 'd': ',', 'e': 'e', 'f': 'C', 'g': 'B', 'h': ']', 'i': 'F', 'j': '8', 'k': 'E', 'l': '%', 'm': 'A', 'n': '1', 'o': 'Y', 'p': 'q', 'q': '`', 'r': 'L', 's': '6', 't': 'c', 'u': '7', 'v': 'v', 'w': '+', 'x': 'T', 'y': '\x0b', 'z': 'O', 'A': '[', 'B': 'I', 'C': '"', 'D': 'h', 'E': 'r', 'F': 'y', 'G': 'n', 'H': 's', 'I': 'z', 'J': '^', 'K': 'Q', 'L': 'b', 'M': '&', 'N': '\r', 'O': '_', 'P': 'G', 'Q': 'P', 'R': 'M', 'S': '\t', 'T': 'd', 'U': 't', 'V': 'K', 'W': 'U', 'X': '-', 'Y': '5', 'Z': 'N', '0': '\\', '1': 'k', '2': ')', '3': 'D', '4': '}', '5': 'm', '6': '$', '7': '=', '8': 'S', '9': '\x0c', '!': 'g', '"': 'H', '#': '|', '$': 'x', '%': '#', '&': '3', "'": 'R', '(': '/', ')': '{', '*': '?', '+': '(', ',': 'o', '-': '<', '.': 'w', '/': "'", ':': '~', ';': '@', '<': '4', '=': 'W', '>': '*', '?': '9', '@': ';', '[': 'p', '\\': '\n', ']': '0', '^': 'V', '_': 'Z', '`': 'J', '{': 'j', '|': ':', '}': 'l', '~': '.', ' ': 'f', '\t': '2', '\n': ' ', '\r': 'a', '\x0b': '!', '\x0c': 'i'},
    'iX41?o':{'a': 'X', 'b': ',', 'c': 'H', 'd': '1', 'e': 'd', 'f': '\n', 'g': '&', 'h': 'G', 'i': '<', 'j': '/', 'k': 'y', 'l': 'I', 'm': ' ', 'n': '4', 'o': '?', 'p': '$', 'q': '-', 'r': 'o', 's': '\r', 't': '0', 'u': 'r', 'v': ')', 'w': '[', 'x': 'l', 'y': '5', 'z': 'Z', 'A': ';', 'B': 'B', 'C': 'f', 'D': 'T', 'E': '\x0c', 'F': '.', 'G': '`', 'H': 'P', 'I': '\\', 'J': 'Q', 'K': 'E', 'L': 'v', 'M': '9', 'N': '\t', 'O': 'R', 'P': 'i', 'Q': 'g', 'R': '(', 'S': 'h', 'T': 'K', 'U': '|', 'V': 'j', 'W': '8', 'X': '\x0b', 'Y': ':', 'Z': 'm', '0': 'O', '1': 'c', '2': '6', '3': '!', '4': '"', '5': 'z', '6': '}', '7': '+', '8': '3', '9': 'A', '!': '{', '"': '^', '#': 'e', '$': 'w', '%': '_', '&': '>', "'": 'M', '(': '@', ')': 'J', '*': 'L', '+': '*', ',': 'x', '-': 'N', '.': 'p', '/': 'Y', ':': 'C', ';': 'S', '<': ']', '=': 'k', '>': 'n', '?': 's', '@': '2', '[': 'V', '\\': '%', ']': 't', '^': '~', '_': 'u', '`': "'", '{': 'a', '|': 'b', '}': 'F', '~': '7', ' ': 'D', '\t': 'U', '\n': 'q', '\r': 'W', '\x0b': '=', '\x0c': '#'},
    '~H0z5G_':{'a': 'G', 'b': '|', 'c': '^', 'd': '0', 'e': '5', 'f': '+', 'g': 'n', 'h': 'S', 'i': '\r', 'j': '[', 'k': '\t', 'l': 's', 'm': 'u', 'n': 'H', 'o': '2', 'p': ' ', 'q': 'd', 'r': 'z', 's': '_', 't': ':', 'u': 't', 'v': 'E', 'w': 'A', 'x': '#', 'y': 'i', 'z': 'y', 'A': '~', 'B': 'T', 'C': ',', 'D': 'J', 'E': '3', 'F': 'Z', 'G': 'W', 'H': '(', 'I': '}', 'J': 'B', 'K': 'b', 'L': ']', 'M': 'o', 'N': ';', 'O': 'C', 'P': '-', 'Q': 'V', 'R': 'j', 'S': 'r', 'T': '.', 'U': 'R', 'V': '<', 'W': '\n', 'X': '@', 'Y': 'p', 'Z': '=', '0': 'K', '1': '`', '2': 'U', '3': '!', '4': 'h', '5': 'P', '6': '6', '7': 'F', '8': '"', '9': 'Q', '!': 'D', '"': 'l', '#': '\x0b', '$': 'f', '%': '\\', '&': '7', "'": '&', '(': '$', ')': 'w', '*': 'I', '+': '%', ',': '{', '-': 'X', '.': '*', '/': '\x0c', ':': 'x', ';': '1', '<': 'q', '=': 'N', '>': '4', '?': 'v', '@': '>', '[': 'k', '\\': 'c', ']': 'O', '^': '?', '_': '/', '`': 'M', '{': '8', '|': 'e', '}': 'a', '~': 'L', ' ': 'g', '\t': '9', '\n': 'Y', '\r': "'", '\x0b': ')', '\x0c': 'm'}
}
def generate_key():
    all_characters = string.ascii_letters + string.digits + string.punctuation + string.whitespace
    shuffled_characters = list(all_characters)
    random.shuffle(shuffled_characters)
    return dict(zip(all_characters, shuffled_characters))

def decrypt(encrypted_text):
    decrypted_text = ''
    if(encrypted_text not in maps):
        return 'Not Found'
    key = maps[encrypted_text]
    for char in encrypted_text:
        decrypted_text += [k for k, v in key.items() if v == char][0]
    return decrypted_text

decrypted_text = decrypt(Encryption)
if decrypted_text == 'Not Found':
    print('Incorrect Encrypted Text!')
else:
    print(f'Decrypted! Found Alien - {decrypted_text}')
